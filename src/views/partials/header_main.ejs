<style>
#div_right_top {
	position: relative;
}
#div_right_top:hover, #div_right_video:hover {
	box-shadow: 5px 5px 10px;

}
.blockchain:hover{
    box-shadow: 5px 5px 10px;
    border:2px solid black;
}

#div_right_video {
	position: relative;
}

.feeds {
	display: block;
	transition: transform .3s .15s ease-in;
}

.feeds::after {
	background-image: -webkit-linear-gradient(top,rgba(0,0,0,0) 50%,rgba(0,0,0,.25) 70%,rgba(0,0,0,.9) 100%);
	background-color: transparent;
	background-clip: padding-box;
	content: '';
	height: 100%;
	top: 0;
	width: 100%;
	left: 0;
	position: absolute;
	border-radius: 8px;
}

.feeds img {
	object-fit: cover;
	border-radius: 8px;
}

.feeds:hover {
	transform: scale(1.05);
}

.today_feeds {
	margin-top: 32rem;
}

.feed-title {
    border: 3px solid black;
    border-radius:15px;
	font-size: 38px;
	text-align: center;
	font-weight: 700;
	/* font-family: ; */
}
#scrollButton{
    display: none;
}

</style>

<body class="home inner" cz-shortcut-listen="true" data-new-gr-c-s-check-loaded="14.1032.0" data-gr-ext-installed="">
    <div class="modal_area">
        <div class="modal" id="b">
            <div class="main_part_modal">
                <div class="header">
                    <a href="#" class="cancel">X</a>
                </div>
                <div class="content">
                    <div class="text_left_side">
                        <h2>JOIN THE DefiZone</h2>
                        <p>Be the first to know about new products exclusive finds, promotions and more.</p>
                        <form>
                            <input type="email" name="email" class="input_area" placeholder="Enter your Email">
                            <button type="submit">JOIN</button>
                        </form>
                    </div>
                    <div class="image_right_side">
                        <img src="../../../../images/poup_img.png" alt="">
                    </div>
                </div>                
            </div>
        </div>
    </div>
    
    <header class="header show" style="background-color:#fff">
        <div class="container">
            <div class="header__burger only-tablet">
                <svg width="52" height="9" viewBox="0 0 52 9" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <line x1="52" y1="0.5" x2="-4.45684e-08" y2="0.499996" stroke="black"></line>
                    <line x1="52" y1="8.5" x2="-4.45684e-08" y2="8.5" stroke="black"></line>
                </svg>
                <span>Menu</span>
            </div>
            
                
            <div class="header__logo">
                <a href="/">
                    <img src="../../../../images/logo.png" width="184" alt="" />
                </a>
            </div>
            
            <div class="header__link header__button" style="margin-left: auto;margin-right: 0;">
               
                <select class="header_btn blockchain" id="sel_chain" disabled>
                    <option value="bsc"><b>Binance Chain</b></option>
                    <option value="polygon">Polygon Chain</option>
                </select>
                <select class="header_btn"  >
                    <option value="" disabled selected>Menu</option>
                    <option value="bsc">Home</option>
                    <option value="polygon">Project</option>
                    <option value="polygon">Contact Us</option>
                </select>    
                <a href="#" class="header__btn" id='btn_connect_wallet' onclick="connectWallet();">
                    <span>Connect Wallet</span>
                </a>
                <span id='sp_address' class="header_address"></span>
            </div>
        </div>        
    </header>
    <div class="menu">
        <div class="container">
            <div class="menu__social">
                <span>Our Social</span>
                <div class="menu__social-items">
                    <a href="#" class="menu__social-item" target="_blank">
                        <svg width="15" height="14" viewBox="0 0 15 14" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M3.52535 1.62631C3.50501 0.703141 2.84485 0 1.77285 0C0.70084 0 0 0.703141 0 1.62631C0 2.53036 0.680126 3.25374 1.73217 3.25374H1.75219C2.84485 3.25374 3.52535 2.53036 3.52535 1.62631ZM3.3192 4.53897H0.185542V13.9543H3.3192V4.53897ZM11.0123 4.31778C13.0744 4.31778 14.6203 5.66376 14.6203 8.55575L14.6202 13.9542H11.4866V8.91701C11.4866 7.65176 11.0332 6.7884 9.89878 6.7884C9.03304 6.7884 8.51737 7.37043 8.29089 7.9326C8.20804 8.13406 8.1877 8.41477 8.1877 8.69617V13.9545H5.05366C5.05366 13.9545 5.09496 5.42261 5.05366 4.53912H8.1877V5.87273C8.60361 5.23164 9.34851 4.31778 11.0123 4.31778Z" fill="black"></path>
                        </svg>
                    </a>    
                </div>

                <div class="menu__social-items">
                <a href="#" class="header__btn">
                    <span style="margin-bottom:0px;">Connect Wallet</span>
                </a>
            </div>
            </div>
            <p class="menu__copyright">&copy; 2021 DefiZone. All rights reserved.</p>
        </div>
    </div>
    
    <main id="main">
        <section class="heron animate" style="display: flex;">
            <div class="container" style="width: auto; margin: 0; padding-right: 20px;">
                <div class="heron__one" style="padding-right: 30px;">
                    <div class="heron__circle">
                        <img src="../../../../images/Ellipse301.png" width="1281" height="1281" alt="" class="enable_rotate" style="animation-duration: 16.6667s; animation-delay: -9.13733s; opacity: 1;">
                    </div>
                    <div class="heron__circle frfl">
                        <img src="../../../../images/Ellipse3011.png" width="1281" height="1281" class="heron__frfl enable_rotate" alt="" style="animation-duration: 16.6667s; animation-delay: -9.13733s; opacity: 0;">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 40 40" class="heron__circle-one">
                            <circle class="progress" fill="none" stroke-linecap="round" cx="20" cy="20" r="19"></circle>
                        </svg>
                    </div>
                    <div class="heron__content inner_page" >
                        <!-- <div class="ad_banner">
                            <img src="https://via.placeholder.com/1000x100" alt=""/>
                        </div> -->
                        <div id="div_topimg" style="height: auto; width: 100%;"></div>
                        
                        <div style="margin-top: 10px; margin-bottom: 10px; width: 100%; display: flex;">
                            <span style="margin-top: 25px;" id="sp_prj_name">:                                
                            </span>
                            &nbsp;&nbsp;&nbsp;
                            <span style="margin-top: 25px;" id="sp_total" style="margin-left: 2rem;">                               
                            </span>
                            &nbsp;&nbsp;&nbsp;
                        
                        <span class="filters" style="margin-left: auto;margin-right: 0;">
                            <span class="form_area">
                                
                                    <label>Sort by<br/>
                                        <select id="sort_item" oninput="makeHtml();">
                                            <option value="">Default</option>
                                            <option value="apr">APR</option>
                                            <option value="tvl">TVL Liquidity</option>
                                        </select>
                                    </label>
                                    <label>Search<br/>
                                        <input type="serach" name="search" class="input_type" id="search_token" oninput="makeHtml();">
                                    </label>
                                    <!-- <div class="checkbox_area">
                                        <input type="checkbox" id="stakedonly" name="stakedonly" value="stakedonly">
                                        <label for="vehicle1">Staked only</label>

                                        <input type="checkbox" id="showendedy" name="showendedy" value="Show endedy">
                                        <label for="vehicle1">Show endedy</label>
                                    </div> -->
                                
                                </span>
                            </span>  
                    </div>
                    
                    <div class="heron__content inner_page" id="div_result" style="margin-bottom: 20%;"> 
                        <div id="log2"></div>
                        
                        <div class="loader--1"></div>
                    </div>
                </div>
            </div>

            <div class="today_feeds" style="width: 20%; display: flex; flex-direction: column; z-index: 1;">
                <span class="feed-title">Tweet of the Day!</span>
                <div id="div_right_top" style="margin: 10px 0px ; "></div>
                <span class="feed-title" style="margin-top: 30px;">Video of the Day!</span>
                <div id="div_right_video" style="margin-top: 10px; background-color:black"></div>
            </div>   

            <div onclick="topFunction()" style="z-index: 10000;" id="scrollButton" style="background-color: white;">
                <img class="mouse"  src="/arrow-down.gif" alt="" width="50" />
            </div>
               

        </section>
        
    </main>
    <!-- <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>  -->
    <script src="https://code.jquery.com/jquery-3.5.1.min.js" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.touchswipe/1.6.19/jquery.touchSwipe.min.js" integrity="sha512-YYiD5ZhmJ0GCdJvx6Xe6HzHqHvMpJEPomXwPbsgcpMFPW+mQEeVBU6l9n+2Y+naq+CLbujk91vHyN18q6/RSYw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prefixfree/1.0.7/prefixfree.min.js"></script>
    <!-- <script src="<%= PP %>/banner.js"></script> -->
    
    <script>
        var renderedHtml = false;
        var htmlObjs = []  
        var farmName = ''      
        var bannerdata={};
        function topFunction() {
            document.getElementById("main").scrollTop = document.getElementById("main").scrollHeight; // For Safari
} 

var scrollButton=document.getElementById("scrollButton"); 
document.getElementById("main").onscroll = function() {scrollFunction()};

function scrollFunction() {
    console.log("Working");
  if (document.getElementById("main").scrollTop > 20) {
    scrollButton.style.display = "block";
  } else {
    scrollButton.style.display = "none";
  }
}
        $(document).ready(async function() {
console.log(bannerdata);
            

    



            var chainName = location.search.split('chain=')[1]
            chainName = chainName.slice(0, chainName.indexOf('&'))
            $('#sel_chain').val(chainName)
            console.log(location.search)
            farmName = location.search.split('prj=')[1];
            // show project name            
            $('#sp_prj_name').html('Project Name: ' + decodeURIComponent(farmName))

            const accounts = await window.ethereum.request({method: 'eth_accounts'});  
            if (accounts && accounts.length > 0) {
                $('#btn_connect_wallet').css('display','none')
                $('#sp_address').html(accounts[0].substring(0, 3) + '...' + accounts[0].substring(accounts[0].length-4))
            }
            let req = new XMLHttpRequest();

req.onreadystatechange = () => {
  if (req.readyState == XMLHttpRequest.DONE) {
    bannerdata=req.responseText;
    bannerdata=JSON.parse(bannerdata);
            // load top banner 
            var ads_selected = bannerdata.ads_selected;
            var ads = bannerdata.ads;            
            var top_img = ads[ads_selected[0][0]-1]
            var top_img_link = bannerdata.ads_links[ads_selected[0][1]-1]
            $('#div_topimg').html('<a href="' + top_img_link + '"><img src="../../../../' + top_img + '" style="width:100%; height: auto;"></a>')
            //  end top banner

            // load right top banner 
            var tweets_selected = bannerdata.tweets_selected;
            var tweets = bannerdata.tweets;
            var t_links = bannerdata.t_links;

            var tr_img = tweets[tweets_selected[0]-1];
            var tr_link = t_links[tweets_selected[1]-1];

            $('#div_right_top').html(
                    '<a href="'+tr_link+'" class="feeds" target="_blink"><img width="100%" height="225" src="'+tr_img+'"></a> '
                );
            //  end right top banner 

            // load right top video 
            var video_selected = bannerdata.video_selected;
            var videos = bannerdata.videos;            
            var tr_video = videos[video_selected-1]
            var videohtml = "<iframe title='YouTube video player' type=\"text/html\" width='100%'" +   
                            "height='auto' src='" + tr_video + "' frameborder='0'" + 
                            "allowFullScreen></iframe>"   
            // var videohtml ='<a href="'+tr_video+'" target="_blink" class="feeds"><img src="https://s2.coinmarketcap.com/static/new-alerts/613f25cbef9a5a001905f323/img/1636473477049_Meta (1).jpg" width="100%" height="225" alt="123" border="0"></a>'

            $('#div_right_video').html(videohtml)
            //  end right top video
        };
}
req.open("GET", "https://api.jsonbin.io/b/619470a001558c731cc3afae/latest", true);
req.setRequestHeader("X-Master-Key", "$2b$10$AqjBU.xui4GAkXVjCFUlcuWvdDLC1.mFSkQqUqWBKP0.qYzkFaF5y");
req.send();


        });

        async function connect_wallet() {
            const accounts = await window.ethereum.request({method: 'eth_requestAccounts'});   
            if (accounts.length > 0) {
                $('#btn_connect_wallet').css('display','none')
                $('#sp_address').html(accounts[0].substring(0, 3) + '...' + accounts[0].substring(accounts[0].length-4))
            }       
        }       
        
        $(document).ready(function() {    

            // checking account is changed
            window.ethereum && window.ethereum.on('accountsChanged', async function (accounts) {
                console.log('==== accountsChanged ====')    
                window.location.reload();
                
            })
            
            // checking chain is changed
            window.ethereum && window.ethereum.on('chainChanged', async function (networkId) {
                console.log('==== chainChanged ====')    
                window.location.reload();
            })

            showLoading();
            
            var target = document.querySelector('#log2');
            // create an observer instance
            var observer = new MutationObserver(function(mutations) {
                mutations.forEach(function(mutation) {
                    if (mutation.type == 'childList' ) {
                        //mutation.addedNodes[3]
                        mutation.addedNodes.forEach( item => {
                            
                            if (item.tagName =='B') {
                                let totalStr = item.firstChild && item.firstChild.nodeValue
                                if (totalStr.toLowerCase().lastIndexOf('total staked:') > -1) {
                                    if (renderedHtml == false) {
                                        console.log('--------- call make html ---------');
                                        
                                        // display total
                                        if (totalStr.toLowerCase().lastIndexOf('total staked:') > -1) {
                                            let total = totalStr.slice(totalStr.toLowerCase().lastIndexOf('total staked:'))
                                            total = total.slice(total.indexOf('$'))
                                            $('#sp_total').html('<b>Total Value Locked ( TVL ) : ' + total + '</b>') ;
                                            console.log(mutations);
                                        }
                                        
                                        makeHtml(); 
                                        removeObserver()
                                        return false;
                                    }
                                }
                            }

                            let tempStr = item.nodeValue
                            if (tempStr && tempStr.indexOf('Try refreshing the page.') > -1) {                                
                                if (tempStr.toLowerCase().lastIndexOf('total staked:') > -1) {                                    
                                    return false;
                                } else {
                                    let msg = '<span>Please check back later when "' + farmName + '" update us with the latest APR details. ';
                                    msg = msg + '<br>If its urgent contact "' + farmName + '" Support.</span>'                                    
                                    $('#div_result').html(msg); 
                                    $('#log2').css('display', 'none')
                                }    
                                removeObserver()                    
                            } 
                            
                        })
                    }
                    
                });
            });

            // configuration of the observer:
            var config = { attributes: false, childList: true, characterData: false }

            // pass in the target node, as well as the observer options
            observer.observe(target, config);

            function removeObserver() {
                observer.disconnect();
            }

            // // later, you can stop observing
            // observer.disconnect();

            $('#log').css('display', 'none')
        })

        function unformatter(value){            
            value = value.replace(" ","");
            value = value.replace("$","");
            value = value.replace(",","");
            //value = parseFloat(value);
            return(value); 
        };

        function getPosition(string, subString, index) {
            return string.split(subString, index).join(subString).length;
        }

        function getItemByBr(origHtml, inclstr) {
            var resultstr = '';
            resultstr = origHtml.slice(origHtml.slice(0, origHtml.indexOf(inclstr)).lastIndexOf('<br>') + 4)
            resultstr = resultstr.slice(0, resultstr.indexOf('<br>'))
            return resultstr;
        }

        function searchTokens(searchStr) {            
            var newHtmlObjs = []
            htmlObjs.forEach(item=> {
                let itemstrs = item.split('<br>')
                var validIdx = false;
                var validItemstr = [];
                itemstrs.forEach(item => {
                    if (validIdx==false && item.indexOf('Price:') > -1) {
                        validIdx = true
                    }

                    if(validIdx) {
                        validItemstr.push(item)
                    }
                })

                if (validItemstr.length == 0) 
                    return false

                let price = validItemstr[0]
                let lptoken = price.substring(price.indexOf('>')+1, price.indexOf('</a>'))

                if (lptoken.toLowerCase().indexOf(searchStr.toLowerCase()) > -1) {
                    newHtmlObjs.push(item)
                }
            })

            return newHtmlObjs
        }

        function sortListItem(targetObj, sortItem) {

            if (sortItem=='')  return targetObj

            var newHtmlObjs = []
            var keys = []
            targetObj.forEach((item, index)=> {
                let itemstrs = item.split('<br>')
                var validIdx = false;
                var validItemstr = [];
                itemstrs.forEach(item => {
                    if (validIdx==false && item.indexOf('Price:') > -1) {
                        validIdx = true
                    }

                    if(validIdx) {
                        validItemstr.push(item)
                    }
                })

                if (validItemstr.length == 0) 
                    return false

                let price = validItemstr[0]
                let apr = getItemByBr(item, 'APR:');
                apr = apr.substring(apr.lastIndexOf('APR:') + 5)    
                apr = apr.substring(4, apr.indexOf('Week'))
                apr = apr.substring(0, apr.indexOf('%'))

                let tvl =  price.lastIndexOf('TVL:') > -1 ? price.substring(price.lastIndexOf('TVL:') + 5) : 'N/A'
                let marketCap = price.toLowerCase().lastIndexOf('market cap:') > -1 ? price.substring(price.toLowerCase().lastIndexOf('market cap:') + 12) : 'N/A'
                marketCap = marketCap.substring(0, marketCap.indexOf('<a'))

                tvl = unformatter(tvl)
                marketCap = unformatter(marketCap)                
                keys.push({index, apr, tvl, marketCap})                               
            })

            if (sortItem == 'apr') {
                keys.sort(function(a, b){
                    if(a.apr > b.apr) { return -1; }
                    if(a.apr < b.apr) { return 1; }
                    return 0;
                })

                keys.forEach(item => {
                    newHtmlObjs.push(targetObj[item.index])
                })
            } else {
                keys.sort(function(a, b){
                    if (a.tvl !=='N/A' && a.tvl !=='N/A') {
                        if(a.tvl > b.tvl) { return -1; }
                        if(a.tvl < b.tvl) { return 1; }
                    } else if (a.tvl !=='N/A' && b.marketCap !== 'N/A'){
                        if(a.tvl > b.marketCap) { return -1; }
                        if(a.tvl < b.marketCap) { return 1; }
                    } else if (a.marketCap !=='N/A' && b.tvl !== 'N/A'){
                        if(a.marketCap > b.tvl) { return -1; }
                        if(a.marketCap < b.tvl) { return 1; }
                    } else if (a.marketCap !=='N/A' && b.marketCap !== 'N/A'){
                        if(a.marketCap > b.marketCap) { return -1; }
                        if(a.marketCap < b.marketCap) { return 1; }
                    }                    
                    return 0;
                })

                keys.forEach(item => {
                    newHtmlObjs.push(targetObj[item.index])
                })
            }

            return newHtmlObjs;
        }

        function makeHtml() {    
            let divresulthtml =''  
            let htstr = ''
            var pools = [] 

            if (htmlObjs.length == 0) {
                let origHtml = $('#log2').html()
                           
                if (origHtml.indexOf('Staking or unstaking also claims rewards.') > -1) {
                    pools = origHtml.split('Staking or unstaking also claims rewards.')
                } else {
                    if (origHtml.indexOf('Exit') > -1) { 
                        pools = origHtml.split('Exit')
                    }
                }

                let poolsfirstitem = pools[0]
                pools[0] = pools[0].slice(pools[0].slice(0, pools[0].indexOf('Price:')).lastIndexOf('<br>') + 4)

                // save htmlObjs if it is initial status
                if (htmlObjs.length == 0)
                    htmlObjs = pools;
            } else {
                pools = htmlObjs
                var search_str = $('#search_token').val();
                pools = searchTokens(search_str);

                var sortItem = $('#sort_item').val();
                pools = sortListItem(pools, sortItem);
            }
            
            var ads_selected = bannerdata.ads_selected;
            var ads = bannerdata.ads; 
            ads_selected = ads_selected.slice(1);
            let adsIdx = 0;   
            let req = new XMLHttpRequest();

console.log(bannerdata);
            
            pools.slice().reverse().forEach((item, index) => {                
        
                ads_selected = bannerdata.ads_selected;
                ads = bannerdata.ads; 
                ads_selected = ads_selected.slice(1);

           
                // add banner image 
                if (index !==0 && index % 6 ==0 ) {    
                    if (ads) {
                        var item_img = ads[ads_selected[adsIdx][0]-1];  
                        var item_img_link = bannerdata.ads_links[ads_selected[adsIdx][1]-1];                
                        let imghtml = '<a href="' + item_img_link + '" style="width:100%;"><img src="../../../../' + item_img + '" style="width:100%; height:auto; margin-bottom: 20px;"></a>'
                        divresulthtml += imghtml
                        adsIdx++;
                    }                    
                }
           

                let itemstrs = item.split('<br>')
                console.log(itemstrs.length)
                
                if (itemstrs[2] && itemstrs[2].toLowerCase().indexOf('total staked:') > -1)
                    return false;
                    
                var validIdx = false;
                var validItemstr = [];
                itemstrs.forEach(item => {

                    if (validIdx==false && item.indexOf('Price:') > -1) {
                        validIdx = true
                    }

                    if(validIdx) {
                        validItemstr.push(item)
                    }
                })

                let price = validItemstr[0]
                let pair1 = validItemstr[1].substring(0, validItemstr[1].lastIndexOf('Price:'))
                let priceP1 = validItemstr[1].substring(validItemstr[1].lastIndexOf('Price:') + 7)
                let pair2 = validItemstr[2].substring(0, validItemstr[2].lastIndexOf('Price:'))
                let priceP2 = validItemstr[2].substring(validItemstr[2].lastIndexOf('Price:') + 7)

                let staked = getItemByBr(item, 'Staked:');
                staked = staked.substring(staked.lastIndexOf('Staked:') + 8)
                let perWeek = getItemByBr(item, 'Per Week:');
                perWeek = perWeek.substring(perWeek.lastIndexOf('Per Week:') + 10)
                let apr = getItemByBr(item, 'APR:');
                apr = apr.substring(apr.lastIndexOf('APR:') + 5)                    
                let stakingpool = getItemByBr(item, 'You are staking');
                let stake = getItemByBr(item, 'Stake ')
                let unstake = getItemByBr(item, 'Unstake ')
                let claim = getItemByBr(item, 'Claim ')
                let revoke = getItemByBr(item, 'Revoke ')

                
                let tokenprice = price.substring(price.lastIndexOf('Price:'))
                tokenprice = tokenprice.substring(7, getPosition(tokenprice, ' ', 2));
                let tvl =  price.lastIndexOf('TVL:') > -1 ? price.substring(price.lastIndexOf('TVL:') + 5) : 'N/A'
                let marketCap = price.toLowerCase().lastIndexOf('market cap:') > -1 ? price.substring(price.toLowerCase().lastIndexOf('market cap:') + 12) : 'N/A'
                if (marketCap !== 'N/A') marketCap = marketCap.substring(0, marketCap.indexOf('<a'))
                let lptoken = price.substring(price.indexOf('>')+1, price.indexOf('</a>'))
                let stakestr = stake.slice(stake.indexOf('Stake'), stake.indexOf('</a>'))
                let unstakestr = unstake.slice(unstake.indexOf('Unstake'), unstake.indexOf('</a>'))

                let htstr = '<button class="accordion">' + 
                        '<div class="vault-header w-100">' +
                            '<div class="logo-container">' +
                                '<div class="vault-info">' +
                                    '<a href="#" class="title no-info" onclick="return false;">' + lptoken + '</a>'+ 
                                    // '<div class="get" style="font-family: NeutraText-Book; margin-bottom: 5px;"></div>' +
                                    // '<div class="get">' +
                                    //     '<a href="" target="_blank" style="color: unset;">Get WEX </a>' +
                                    // '</div>' +
                                '</div>' +
                                '<div class="vault-digging"></div>' +
                            '</div>' +
                            '<div class="information-container c4">' +
                                '<div class="vault-staked">' +
                                    '<div class="total">' +
                                        '<span class="small-info">Token</span>' +
                                    '</div>' +
                                    '<div class="small-na">' + tokenprice + '</div>' +
                                '</div>' +
                                '<div class="vault-apy">' +
                                    '<div class="total">APR</div>' +
                                    '<a href="#" class="small-info" onclick="return false;"><span>'+ apr.slice(apr.toLowerCase().indexOf('year') + 4) + '</a> ' +                                       
                                '</div>' +
                                '<div class="vault-earned">' +
                                    '<div class="total">' +
                                        '<span class="small-info">APY</span>' +
                                    '</div>' +
                                    '<div class="small-na">N/A</div>' +
                                '</div>' +
                                '<div class="vault-liquidity">' +
                                    '<div class="total">' + (marketCap !=='N/A' ? 'Market Cap': 'TVL Liquidity') + '</div>' +
                                    '<div class="small-info"><span>'+ (marketCap !=='N/A' ? marketCap : tvl) +'</span></div>' +                                    
                                '</div>' +
                            '</div>' +
                            '<div class="vault-chevron">' +
                                '<span class="mdi mdi-chevron-down"></span>' +
                            '</div>' +
                        '</div>' +
                    '</button>'
                
                htstr += '<div class="panel">' +
                        '<div class="vault-content w-100">' +
                            '<div class="bl balance">' +
                                '<div class="vault-form">' +
                                    '<div class="title">' + lptoken +' Stake</div>' +
                                    '<div class="total"><span>N/A</span></div>' +
                                    '<div class="inputs">' +
                                        '<div class="input-group">' +
                                            '<input class="input" type="number" min="0" step="0.1" value="' + stakestr.substring(stakestr.indexOf('Stake')+ 6, getPosition(stakestr, ' ', 2)) + '">' +
                                            '<span class="text" style="cursor: pointer;">MAX</span>' +
                                        '</div>' + 
                                        '<button type="button" class="btn btn-default form-button">'+ stake.substring(0, stake.indexOf('>')+1) + 'Stake</a>' +'</button>' +
                                    '</div>' +
                                '</div>' +
                            '</div>' +
                            '<div class="bl staked">' +
                                '<div class="vault-form">' +
                                    '<div class="title">' + lptoken +' Unstaked</div>' +
                                    '<div class="total"><span>N/A</span></div>' +
                                    '<div class="inputs">' +
                                        '<div class="input-group">' +
                                            '<input class="input" type="number" min="0" step="0.1" value="' + unstakestr.substring(unstakestr.indexOf('Unstake')+ 8, getPosition(unstakestr, ' ', 2)) + '">' +
                                            '<span class="text" style="cursor: pointer;">MAX</span>' +
                                        '</div>' +
                                        '<button type="button" class="btn btn-default form-button">'+ unstake.substring(0, unstake.indexOf('>')+1) + 'Unstake</a>' +'</button>' +
                                    '</div>' +
                                '</div>' +
                            '</div>' +
                            '<div class="bl rewards">' +
                                '<div class="vault-form">' +
                                    '<div class="title">' + lptoken +' <br/>Earned</div>' +
                                    '<div class="total"><span>N/A</span></div>' +
                                    '<div class="inputs">' +
                                        '<button type="button" class="btn btn-default form-button">'+ claim.substring(0, claim.indexOf('>')+1) + 'Claim</a>' +'</button>' +
                                    '</div>' +
                                '</div>' +
                            '</div>' +
                            '<div class="bl staked new_part">' +
                                '<div class="vault-form">' +
                                    '<div class="title">' + lptoken +' <br/>Revoke</div>' +
                                    '<div class="total"><span>N/A</span></div>' +
                                    '<div class="inputs">' +
                                        '<button type="button" class="btn btn-default form-button">'+ revoke.substring(0, revoke.indexOf('>')+1) + 'Revoke</a>' +'</button>' +
                                    '</div>' +
                                '</div>' +
                            '</div>' +
                        '</div>' +
                        '<div class="vault-content w-100 border_area_bottom data_table_main">' +
                            '<div class="data_table1">' +
                                '<div class="vault-form">' +
                                    '<div class="total">Token </div>' +
                                    '<div class="title"><span>Token LP Price : '+ tokenprice +'<br/> TVL : '+ tvl +'</span></div>' +
                                '</div>' +
                            '</div>' +
                            '<div class="data_table1">' +
                                '<div class="vault-form">' +
                                    '<div class="total">Token Price </div>' +
                                    '<div class="title"><span>'+ tokenprice +'</span></div>' +
                                '</div>' +
                            '</div>' +
                            '<div class="data_table1">' +
                                '<div class="vault-form">' +
                                    '<div class="total">Staked </div>' +
                                    '<div class="title"><span>'+ staked + '</span></div>' +
                                '</div>' +
                            '</div>' +
                            '<div class="data_table1">' +
                                '<div class="vault-form">' +
                                    '<div class="total">Token Per Week </div>' +
                                    '<div class="title"><span>' + perWeek + '</span></div>' +
                                '</div>' +
                            '</div>' +
                            '<div class="data_table1">' +
                                '<div class="vault-form">' +
                                    '<div class="total">APR</div>' +
                                    '<div class="title" style="white-space: nowrap;"><span>'+ [apr.slice(0, apr.indexOf('Week')), '<br/>', apr.slice(apr.indexOf('Week'), apr.indexOf('Year')), '<br/>', apr.slice(apr.indexOf('Year'))].join('') +'</span></div>' +
                                '</div>' +
                            '</div>' +
                            '<div class="data_table1">' +
                                '<div class="vault-form">' +
                                    '<div class="total">You are staking</div>' +
                                    '<div class="title"><span>'+ stakingpool.substring(15, stakingpool.lastIndexOf('of the pool.')) +'</span></div>' +
                                '</div>' +                               
                            '</div>' +
                        '</div>' +
                    '</div> '

                divresulthtml += htstr
                
            })
         
            divresulthtml += '<div id="log2" style="display:none;"></div>'
            $('#div_result').html(divresulthtml);            

            renderedHtml = true;

            /*** Accordion  */
            var acc = document.getElementsByClassName("accordion");
            var i;

            for (i = 0; i < acc.length; i++) {
            acc[i].addEventListener("click", function() {
                this.classList.toggle("active");
                var panel = this.nextElementSibling;
                if (panel.style.maxHeight) {
                panel.style.maxHeight = null;
                } else {
                panel.style.maxHeight = panel.scrollHeight + "px";
                } 
            });
            }  
        }

    </script>
            <%- include(`${partials}/footer`); -%></body>

